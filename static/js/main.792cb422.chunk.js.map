{"version":3,"sources":["logo.svg","logo.gif","img/logo.svg","views/sala.js","App.js","reportWebVitals.js","index.js"],"names":["api","googleKey","process","Link","Anchor","horarios","cupos0","valor","url","HorariosSala","date","Date","setDate","getDate","getDay","useState","schedule","setSchedule","nombre","setNombre","selected","setSelected","email","setEmail","setName","isModalVisible","setIsModalVisible","week","setWeek","mood","setMood","isLoading","setIsLoading","weekDays","setWeekDays","firstLoading","setFirstLoading","setGoogleImage","nombreNew","setNombreNew","tutore","setTutore","reloadSchedule","s","console","log","axios","get","headers","then","response","catch","err","Promise","resolve","setTimeout","responseGoogle","Ws","Ht","check_espacios","time","i","parse","colorSelected","colorNotSelected","colorMouse","colors","verde","not","anotade","includes","modSchedule","post","colorTutorxs","rol","color","className","style","backgroundColor","borderRadius","borderColor","margin","fontSize","paddingTop","paddingBottom","paddingLeft","paddingRight","verticalAlign","sendRequest","put","handleCancel","loading","bgColor","spinnerColor","textColor","logoSrc","Logo","text","align","justify","src","logo","width","alt","targetOffset","type","onClick","title","id","marginLeft","marginRight","size","direction","HeartFilled","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","isSignedIn","xmlns","viewBox","fill","fill-opacity","d","alignItems","bordered","xs","sm","md","lg","xl","timeFormat","startDate","numDays","minTime","maxTime","selection","onChange","newSchedule","renderDateCell","innerRef","textAlign","height","padding","ref","onMouseOver","c","target","lista","listaTutorxs","push","formatTutores","onMouseLeave","renderTimeLabel","1","2","3","4","5","6","7","getHours","renderDateLabel","0","dateFormat","shape","ReloadOutlined","data","status","message","warning","boton","position","visible","onOk","onCancel","okText","placeholder","value","marginTop","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.792cb422.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.605cbd06.gif\";","export default __webpack_public_path__ + \"static/media/logo.41163e46.svg\";","import React, {useState, useEffect} from 'react';\r\nimport { Row, Col, Button, Card, Input, Modal, Space, Anchor, message } from 'antd';\r\nimport { HeartFilled, ReloadOutlined } from '@ant-design/icons';\r\nimport ScheduleSelector from 'react-schedule-selector';\r\nimport axios from \"axios\";\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport  LoadingScreen  from 'react-loading-screen';\r\nimport Logo from '../logo.gif';\r\nimport { Switch } from 'antd'\r\nimport logo from '../img/logo.svg'\r\n\r\n\r\nlet api = \"https://sala-tutorxs.herokuapp.com\"// \"https://sala-tutorxs.herokuapp.com\"\r\nconst googleKey = process.env.REACT_APP_GOOGLE;\r\n// api = \"http://localhost:5000\"\r\n\r\nconst { Link } = Anchor;\r\nconst style = { background: '#0092ff', padding: '8px 0' };\r\n// GET de array u obj, buscar fecha y obtener personas anotadas\r\n/*const horarios = [\r\n    {\r\n        'date': \"2021-08-30 1:00:00\",\r\n        'nombres': ['tesurot'],\r\n        'espacios': 1\r\n    }\r\n]; */\r\n\r\n\r\n\r\n\r\n//let  useEffect();\r\n\r\n// console.log(horarios)\r\n\r\n\r\n\r\nlet horarios = []\r\nlet cupos = 0\r\nlet cupos0 = '(0/4)'\r\nlet valor = 0;\r\n\r\n\r\n\r\nlet url = `${api}/week` //\"https://sala-tutorxs.herokuapp.com/week\";\r\nfunction loadSchedule () {    \r\n        \r\n\r\n        axios\r\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n                                    \r\n        .then((response) => {\r\n\r\n        horarios = response[\"data\"]['schedule'];\r\n        cupos = response[\"data\"]['cupos'];\r\n        cupos0 = response[\"data\"]['cupos_0'];\r\n\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n        } else {\r\n        }\r\n\r\n        });\r\n    };\r\n\r\nloadSchedule();\r\n\r\nexport default function HorariosSala() {\r\n    let date = new Date();\r\n    date.setDate(date.getDate() - date.getDay() + 1 )\r\n    const [schedule, setSchedule] = useState({});\r\n    const [nombre, setNombre] = useState('');\r\n    const [selected, setSelected] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('')\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [week, setWeek] = useState(date)\r\n    const [mood, setMood] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [weekDays, setWeekDays] = useState(5)\r\n    const [firstLoading, setFirstLoading] = useState(false)\r\n    const [googleImage, setGoogleImage] = useState(\"\")\r\n    const [nombreNew, setNombreNew] = useState('')\r\n    const [tutore, setTutore] = useState({\"email\": \"\",\r\n                                        \"nombre\": \"\",\r\n                                        \"gds\": \"\",\r\n                                        \"apodo\": \"\",\r\n                                        \"pronombre\": \"\",\r\n                                        \"tiene_llave\": false,\r\n                                        \"gda\": \"\",\r\n                                        \"rol\": []\r\n                                        })\r\n    \r\n    // const [rol, setRol] = useState(false)\r\n    // const [form] = Form.useForm();\r\n    let tiempo_paso = false;\r\n    function reloadSchedule () {   \r\n        \r\n        console.log(\"RELOADING\")\r\n        axios\r\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n                                    \r\n        .then((response) => {\r\n        \r\n            // console.log(response[\"data\"])\r\n            // console.log(`aaa ${response[\"data\"]}`)\r\n\r\n        \r\n            \r\n        horarios = response[\"data\"]['schedule'];\r\n        console.log(horarios);\r\n        valor = new Date(`${response[\"data\"][\"start\"]} 13:00:00`);\r\n        \r\n        if (mood === true) {\r\n            valor.setDate(valor.getDate() + 7);\r\n        }\r\n\r\n        setWeek(valor);\r\n        cupos = response[\"data\"]['cupos'];\r\n        cupos0 = response[\"data\"]['cupos_0'];\r\n        setSchedule({})\r\n\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n        } else {\r\n        }\r\n\r\n        });\r\n        \r\n        // setIsLoading(false)\r\n        //console.log(`aaa ${week}`)\r\n        // https://www.sitepoint.com/delay-sleep-pause-wait/\r\n        function sleep(s) {\r\n            return new Promise(resolve => setTimeout(resolve, s))\r\n          \r\n        }\r\n        sleep(2000)\r\n        .then( () => {\r\n                //setIsLoading(false);\r\n                tiempo_paso = true;\r\n\r\n        })\r\n\r\n        console.log(\"RELOADING END\")\r\n         \r\n\r\n    };\r\n\r\n    const responseGoogle = (response) => {\r\n        setMood(false);\r\n\r\n        reloadSchedule();\r\n        \r\n        //console.log(week)\r\n        // console.log(response);\r\n        //console.log(\"AAA\", response);\r\n        console.log(\"oli\", response)\r\n        let Ws = \"profileObj\";\r\n        let Ht = \"email\";\r\n        let Qe = \"name\";\r\n        let wJ = \"imageUrl\";\r\n\r\n        if (response && Ws in response) {\r\n        setEmail(response[Ws][Ht])\r\n        setName(response[Ws][Qe])\r\n        setGoogleImage(response[Ws][wJ])\r\n        \r\n        let url = `${api}/tutore?email=` + response[Ws][Ht] //\"https://sala-tutorxs.herokuapp.com/week\";\r\n        axios\r\n        .get(url, {}, { headers: {\"Access-Control-Allow-Origin\": \"*\"}})                         \r\n        .then((response) => {\r\n            console.log(\"oli\", response[\"data\"])\r\n            setTutore(response[\"data\"])\r\n            setNombre(response[\"data\"][\"apodo\"])\r\n            setNombreNew(response[\"data\"][\"apodo\"])\r\n            // setRol(response[\"data\"][\"rol\"])\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n            \r\n        } else {\r\n        }\r\n        });\r\n        \r\n        } else {\r\n            setEmail(\"\")\r\n            setName(\"\")\r\n            setNombreNew(\"\")\r\n            setTutore({\"email\": \"\", \"nombre\": \"\", \"pronombre\": \"\",\r\n                    \"apodo\": \"\", \"gds\": \"\", \"tiene_llave\": false,\r\n                    \"rol\": [], \"gda\": \"\" })\r\n            \r\n        }\r\n\r\n        //setNombre(tutore[\"apodo\"])\r\n        //setIsLoading(false);\r\n\r\n        console.log(tutore);\r\n\r\n        reloadSchedule();\r\n      }\r\n\r\n    \r\n    const handleChange = (newSchedule) => {\r\n        // console.log(newSchedule)\r\n        setSchedule({ schedule: newSchedule });\r\n    }\r\n\r\n    const check_espacios = (time) => {\r\n        for(let i in horarios){\r\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\r\n                \r\n                return `${horarios[i]['cupos']}`;\r\n                // return `(${horarios[i]['espacios']}/4)`;\r\n            }\r\n        }\r\n        return cupos0\r\n    }\r\n\r\n    let colorSelected = 'rgba(89, 154, 242, 1)'\r\n    let colorNotSelected = 'rgba(162, 198, 248, 1)'\r\n    let colorMouse = '#dbedff'\r\n\r\n    const colors = (time) => {\r\n\r\n        let verde = true;\r\n        let not = false;\r\n        let anotade = false;\r\n\r\n        for (let i in horarios) {\r\n            if (Date.parse(new Date( horarios[i]['date'] )) === Date.parse(time)) {\r\n                verde = horarios[i]['verde'];\r\n                not = horarios[i]['not'];\r\n                //console.log(\"AAA\")\r\n                if (email) {\r\n                    // console.log(\"ES EMAIL\", horarios[i][\"nombres\"])\r\n\r\n                    if (horarios[i]['emails'].includes(email)) {\r\n                        //console.log(\"ESTÄ EL EMAIL \")\r\n                        anotade = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n          if ( !verde ) {\r\n            \r\n            colorSelected = '#e8ebed'\r\n            colorNotSelected = '#e8ebed'\r\n            colorMouse = '#e8ebed'\r\n            \r\n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\r\n                colorSelected = '#657786';\r\n                colorMouse = '#8ea0ab';\r\n            }\r\n\r\n        } else\r\n        if (anotade) {\r\n            colorSelected = '#EC7063';\r\n            colorNotSelected = '#52BE80';\r\n            colorMouse = '#7DCEA0';\r\n\r\n        }  else if ( not || time.getDay() === 6 || time.getDay() === 0) {\r\n\r\n            /*colorSelected = 'rgba(231, 76, 60)'\r\n            colorNotSelected = 'rgba(241, 148, 138)'\r\n            colorMouse = '#F5B7B1'*/\r\n            colorSelected = '#e8ebed'\r\n            colorNotSelected = '#e8ebed'\r\n            colorMouse = '#b5c0c7'\r\n\r\n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\r\n                colorSelected = '#657786';\r\n                colorMouse = '#8ea0ab';\r\n            }\r\n\r\n        } else {\r\n\r\n            colorSelected = 'rgba(89, 154, 242, 1)'\r\n            colorNotSelected = 'rgba(162, 198, 248, 1)'\r\n            colorMouse = '#dbedff'\r\n\r\n        }\r\n\r\n        return [colorSelected, colorNotSelected, colorMouse]\r\n    }\r\n\r\n    const modSchedule = () => {\r\n        axios.post(`${api}/horarios/modificar`, {'tutore': tutore, 'schedule': schedule }, {'tutore': tutore, 'schedule': schedule})\r\n        .then( (response) => {\r\n            reloadSchedule();\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err)\r\n        })\r\n    };\r\n\r\n    const changeMood = () => {\r\n    \r\n        if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\r\n            \r\n            if (!mood) {\r\n                setWeekDays(5)\r\n                week.setDate(week.getDate() + 7);\r\n            } else {\r\n                setWeekDays(5)\r\n                week.setDate(week.getDate() - 7);\r\n            }\r\n\r\n            setMood(!mood);\r\n        } else {\r\n            setMood(false);\r\n            setWeekDays(5)\r\n        }\r\n    }\r\n\r\n    const changeName = () => {\r\n        let esClase = \"\";\r\n        if (!tutore[\"email\"]) { \r\n            return <span style={{width: \"100%\"}}></span>\r\n        }\r\n\r\n        return ( \r\n            <Modal \r\n            title=\"Cambia tu nombre!\" \r\n            visible={isModalVisible} \r\n            onOk={sendRequest} \r\n            onCancel={handleCancel}\r\n            okText=\"Cambiar\"\r\n            >\r\n                <Input placeholder='Cambiar tu nombre' value={nombre}  style={{ marginTop: '1%' }} onChange={(d) => setNombre(d.target.value)}/>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    const boton = () => {\r\n        if (tutore[\"rol\"]) {\r\n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\r\n                return ( <Button type=\"primary\"\r\n                // size=\"small\"\r\n                // htmlType=\"submit\"\r\n                shape=\"round\"\r\n                style={{\r\n                    textAlign: \"center\",\r\n                    color: \"white\"\r\n                }}\r\n                onClick={modSchedule}>\r\n                Modificar Horario\r\n             </Button> ) }\r\n        } else {\r\n            return \r\n        }\r\n    }\r\n\r\n    const colorTutorxs = (tutore) => {\r\n        if (!tutore) {\r\n            return <span></span>\r\n        }\r\n        let rol = tutore['rol'];\r\n        let color = '#E74C3C'\r\n        if (rol === 'coordi') {\r\n            color = '#273746'\r\n        } else if (rol === 'jefx') {\r\n            color = 'rgba(46, 134, 193, 1)'\r\n        }\r\n        // console.log(tutore)\r\n        return <span className={\"ant-btn-primary-3 tutore\"} key={tutore['nombre']} style={{backgroundColor: color, color: 'white', borderRadius: '0.3rem', borderColor: 'transparent', margin: '0.1rem', fontSize: '0.8rem', paddingTop: '0.2rem', paddingBottom: '0.26rem', paddingLeft: '0.3rem', paddingRight: '0.3rem',  verticalAlign: 'center'}}>{tutore['nombre']}</span>\r\n    \r\n            \r\n            //for (let i in lista)\r\n\r\n            \r\n        //)</div>}\r\n    }\r\n\r\n    const formatTutores = (time) => {\r\n        let lista = [];\r\n        for(let i in horarios){\r\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\r\n                lista = horarios[i]['nombres'];\r\n            }\r\n        }\r\n        // let result = '';\r\n        let listaTutorxs = []\r\n        for (let i in lista){\r\n\r\n            listaTutorxs.push(colorTutorxs(lista[i]))\r\n\r\n            // result += `${colorTutorxs(lista[i])}`;\r\n        }\r\n        // console.log(listaTutorxs)\r\n\r\n        return   listaTutorxs \r\n    }\r\n\r\n    const renderCustomDateCell = (time, selected, innerRef) => { \r\n\r\n        let [colorSelected, colorNotSelected, colorMouse] = colors(time)\r\n\r\n        return (\r\n        <div \r\n        style={{ \r\n            textAlign: 'center', \r\n            backgroundColor: selected ? colorSelected : colorNotSelected,\r\n            borderRadius: '20px',\r\n            height: '30px',\r\n            padding: '3px'\r\n        }} \r\n            ref={innerRef} onMouseOver={(c) => {\r\n                c.target.style.backgroundColor = colorMouse;\r\n                setSelected(formatTutores(time));\r\n            }}\r\n            onMouseLeave={(c) => {c.target.style.backgroundColor = selected ? colorSelected : colorNotSelected}}>\r\n            {check_espacios(time)}\r\n        </div>\r\n    ) }\r\n\r\n    const sendSchedule = () => {\r\n\r\n        axios.post(`${api}/horarios/reservar`, {'tutore': tutore, 'schedule': schedule }, {'tutore': tutore, 'schedule': schedule})\r\n        .then( (response) => {\r\n            if (!response.data.status) {\r\n                message.warning(response.data.message);\r\n            }\r\n            \r\n            reloadSchedule();\r\n        })\r\n    }\r\n\r\n    const sendRequest = () => {\r\n        const obj = {schedule: schedule, nombre: nombre}\r\n        \r\n        axios.put(`${api}/tutore/change-name`, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule}, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule})\r\n        .then( (response) => {\r\n            // console.log(response)\r\n            setNombreNew(response[\"data\"][\"name\"]);\r\n            // console.log(schedule)\r\n            // setNombreNew(response[\"data\"][\"name\"])\r\n            reloadSchedule();\r\n\r\n            \r\n        })\r\n        setIsModalVisible(false);\r\n        console.log(\"antes real\")\r\n        \r\n\r\n    }\r\n\r\n    const renderTimeLabel = (time) => {\r\n        let traductor = {   1: \"M1\",\r\n                        2: \"M2\",\r\n                        3: \"M3\",\r\n                        4: \"AL\",\r\n                        5: \"M4\",\r\n                        6: \"M5\",\r\n                        7: \"M6\"}\r\n\r\n        let traductorTime = {   1: \"08:30\",\r\n                        2: \"10:00\",\r\n                        3: \"11:30\",\r\n                        4: \"13:00\",\r\n                        5: \"14:00\",\r\n                        6: \"15:30\",\r\n                        7: \"17:00\"}\r\n        return <span className=\"timeFont\">{traductorTime[time.getHours()]}</span>\r\n    }\r\n\r\n    const renderDateLabel = (date) => {\r\n        let traductor = {   1: \"L\",\r\n                        2: \"M\",\r\n                        3: \"W\",\r\n                        4: \"J\",\r\n                        5: \"V\",\r\n                        6: \"S\",\r\n                        0: \"D\"}\r\n        return <span className=\"dateFont\">{traductor[date.getDay()]} {date.getDate()}</span>\r\n    }\r\n\r\n    const GoogleSign = () => {\r\n\r\n        if (!tutore || !tutore[\"email\"] || !tutore[\"apodo\"]) {\r\n            return <GoogleLogin\r\n            clientId={googleKey}\r\n            buttonText=\"Iniciar Sesión ❤\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn={true}\r\n            />\r\n        } else {\r\n            \r\n            return <GoogleLogout\r\n            clientId={googleKey}\r\n            buttonText=\"Cerrar Sesión\"\r\n            onLogoutSuccess={responseGoogle}\r\n            >\r\n            </GoogleLogout>\r\n        }\r\n    }\r\n\r\n    function sleep(s) {\r\n        return new Promise(resolve => setTimeout(resolve, s))\r\n    }\r\n\r\n    if (!firstLoading) {\r\n        reloadSchedule();\r\n    sleep(2380)\r\n    .then( () => {\r\n        \r\n        setFirstLoading(true);\r\n        setIsLoading(false);\r\n    })\r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    return (\r\n    \r\n    <LoadingScreen\r\n\r\n        loading={isLoading}\r\n        bgColor='#ff5757' // '#cc0000'\r\n        spinnerColor='#9ee5f8'\r\n        textColor='white'\r\n        logoSrc={Logo}\r\n        text='Buscando las llaves de la sala...'\r\n    > \r\n        <div className=\"principal\">\r\n            <div className=\"header\">\r\n                <Row align=\"middle\" justify=\"space-between\">\r\n                <img src={logo} style={{ width: 50 }} alt=\"\" />\r\n                <Anchor className=\"anchor\" targetOffset=\"70\">\r\n                    <Button type=\"link\" onClick={showModal}>\r\n                        <Link title={nombreNew}/>\r\n                    </Button>\r\n                </Anchor>\r\n                </Row>\r\n            </div>\r\n\r\n            <div id=\"home\" className=\"wave-container\">\r\n                <Row justify=\"center\" style={{marginLeft: \"15px\", marginRight: \"15px\"}}>\r\n                <Space size=\"small\" direction=\"vertical\">\r\n                    <h1 className=\"title\">Sala de Tutores</h1>\r\n                    <p className=\"description\">{<HeartFilled/>} Reserva tus módulos en la salita {<HeartFilled/>}</p>\r\n                    <br/>\r\n                    {GoogleSign()}\r\n                </Space>\r\n                </Row>\r\n                {/*<img src={imagen} className=\"imgHeader\" alt=\"\" />*/}\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n                    <path fill=\"#fff\" fill-opacity=\"1\" d=\"M0,32L60,37.3C120,43,240,53,360,85.3C480,117,600,171,720,202.7C840,235,960,245,1080,224C1200,203,1320,149,1380,122.7L1440,96L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\r\n                </svg>\r\n            </div>\r\n\r\n            {(tutore.email !== \"\") &&\r\n\r\n            \r\n            <div id=\"reservar\">\r\n                <Row justify=\"center\">\r\n                    <Card style={{alignItems: 'center'}} bordered={false}>\r\n                    \r\n                        <Col xs={24} sm={30} md={36} lg={44} xl={50}>\r\n                            <ScheduleSelector \r\n                                timeFormat='h' \r\n                                startDate={week}  \r\n                                numDays={weekDays} \r\n                                minTime={1} \r\n                                maxTime={8} \r\n                                selection={schedule.schedule} \r\n                                onChange={handleChange}\r\n                                renderDateCell={renderCustomDateCell}  \r\n                                renderTimeLabel={renderTimeLabel}\r\n                                renderDateLabel={renderDateLabel}\r\n                                dateFormat='ddd DD'\r\n                            /> \r\n\r\n                            <br/>\r\n\r\n                            <Space>\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    \r\n                                    // htmlType=\"submit\"\r\n                                    shape=\"round\"\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        color: \"white\"\r\n                                    }}\r\n                                    onClick={reloadSchedule}\r\n                                >\r\n                                        {<ReloadOutlined />}\r\n                                </Button>\r\n                                \r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    \r\n                                    // htmlType=\"submit\"\r\n                                    shape=\"round\"\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        color: \"white\"\r\n                                    }}\r\n                                    onClick={sendSchedule}\r\n                                >\r\n                                        Enviar\r\n                                </Button>\r\n\r\n                                {boton()}\r\n                                \r\n                            </Space>\r\n                            \r\n                            <br/>\r\n                            <br/>\r\n                            \r\n                            <Card\r\n                                title=\"Tutores en el módulo\" \r\n                                bordered={false}\r\n                                style={{ \r\n                                    backgroundColor: \"#F5F8FA\",\r\n                                    height: \"130px\"\r\n                                }}\r\n                            >\r\n                                <Row align=\"middle\" justify=\"center\" style={{height: '70px'}}>\r\n                                    {selected}\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                        <br/>\r\n                        <Space align=\"center\" direction=\"vertical\" size=\"small\">\r\n                            {(tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) &&\r\n                                <Switch style={{position: \"relative\"}} onChange={changeMood}> </Switch> // {mood}\r\n                            }\r\n                        </Space> \r\n                    </Card>\r\n                </Row>\r\n                \r\n            </div>\r\n            }\r\n\r\n            {changeName()}\r\n        </div>\r\n        <p style={{textAlign: \"center\", marginTop: \"4%\"}}>\r\n            Made with {<HeartFilled />} by PFGang\r\n        </p>\r\n        \r\n    </LoadingScreen>\r\n    )\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport HorariosSala from './views/sala';\r\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/sala\">\r\n          <HorariosSala />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}