{"version":3,"sources":["logo.svg","logo.gif","img/logo.svg","views/sala.js","App.js","reportWebVitals.js","index.js"],"names":["api","googleKey","process","Link","Anchor","horarios","cupos0","valor","url","HorariosSala","date","Date","setDate","getDate","getDay","useState","schedule","setSchedule","nombre","setNombre","selected","setSelected","email","setEmail","setName","isModalVisible","setIsModalVisible","week","setWeek","mood","setMood","isLoading","setIsLoading","weekDays","setWeekDays","firstLoading","setFirstLoading","setGoogleImage","nombreNew","setNombreNew","tutore","setTutore","reloadSchedule","s","axios","get","headers","then","response","catch","err","console","log","Promise","resolve","setTimeout","responseGoogle","check_espacios","time","i","parse","colorSelected","colorNotSelected","colorMouse","colors","verde","not","anotade","includes","modSchedule","post","colorTutorxs","rol","color","className","style","backgroundColor","borderRadius","borderColor","margin","fontSize","paddingTop","paddingBottom","paddingLeft","paddingRight","verticalAlign","sendRequest","put","handleCancel","loading","bgColor","spinnerColor","textColor","logoSrc","Logo","text","align","justify","src","logo","width","alt","targetOffset","type","onClick","title","id","marginLeft","marginRight","size","direction","HeartFilled","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","isSignedIn","xmlns","viewBox","fill","fill-opacity","d","alignItems","bordered","xs","sm","md","lg","xl","timeFormat","startDate","numDays","minTime","maxTime","selection","onChange","newSchedule","renderDateCell","innerRef","textAlign","height","padding","ref","onMouseOver","c","target","lista","listaTutorxs","push","formatTutores","onMouseLeave","renderTimeLabel","1","2","3","4","5","6","7","getHours","renderDateLabel","0","dateFormat","shape","ReloadOutlined","data","status","message","warning","boton","position","visible","onOk","onCancel","okText","placeholder","value","marginTop","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21d09f28.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.605cbd06.gif\";","export default __webpack_public_path__ + \"static/media/logo.f4f94bfe.svg\";","import React, {useState, useEffect} from 'react';\nimport { Row, Col, Button, Card, Input, Modal, Space, Anchor, message } from 'antd';\nimport { HeartFilled, ReloadOutlined } from '@ant-design/icons';\nimport ScheduleSelector from 'react-schedule-selector';\nimport axios from \"axios\";\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport  LoadingScreen  from 'react-loading-screen';\nimport Logo from '../logo.gif';\nimport { Switch } from 'antd'\nimport logo from '../img/logo.svg'\n\n\nlet api = \"https://sala-tutorxs.herokuapp.com\"// \"https://sala-tutorxs.herokuapp.com\"\nconst googleKey = process.env.REACT_APP_GOOGLE;\n// api = \"http://localhost:5000\"\n\nconst { Link } = Anchor;\nconst style = { background: '#0092ff', padding: '8px 0' };\n// GET de array u obj, buscar fecha y obtener personas anotadas\n/*const horarios = [\n    {\n        'date': \"2021-08-30 1:00:00\",\n        'nombres': ['tesurot'],\n        'espacios': 1\n    }\n]; */\n\n\n\n\n//let  useEffect();\n\n// console.log(horarios)\n\n\n\nlet horarios = []\nlet cupos = 0\nlet cupos0 = '(0/4)'\nlet valor = 0;\n\n\n\nlet url = `${api}/week` //\"https://sala-tutorxs.herokuapp.com/week\";\nfunction loadSchedule () {    \n        \n\n        axios\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\n                                    \n        .then((response) => {\n\n        horarios = response[\"data\"]['schedule'];\n        cupos = response[\"data\"]['cupos'];\n        cupos0 = response[\"data\"]['cupos_0'];\n\n        })\n        .catch((err) => {\n        console.log(err);\n        if (err.response) {\n        } else {\n        }\n\n        });\n    };\n\nloadSchedule();\n\nexport default function HorariosSala() {\n    let date = new Date();\n    date.setDate(date.getDate() - date.getDay() + 1 )\n    const [schedule, setSchedule] = useState({});\n    const [nombre, setNombre] = useState('');\n    const [selected, setSelected] = useState('');\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('')\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [week, setWeek] = useState(date)\n    const [mood, setMood] = useState(false)\n    const [isLoading, setIsLoading] = useState(true)\n    const [weekDays, setWeekDays] = useState(5)\n    const [firstLoading, setFirstLoading] = useState(false)\n    const [googleImage, setGoogleImage] = useState(\"\")\n    const [nombreNew, setNombreNew] = useState('')\n    const [tutore, setTutore] = useState({\"email\": \"\",\n                                        \"nombre\": \"\",\n                                        \"gds\": \"\",\n                                        \"apodo\": \"\",\n                                        \"pronombre\": \"\",\n                                        \"tiene_llave\": false,\n                                        \"gda\": \"\",\n                                        \"rol\": []\n                                        })\n    \n    // const [rol, setRol] = useState(false)\n    // const [form] = Form.useForm();\n    let tiempo_paso = false;\n    function reloadSchedule () {    axios\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\n                                    \n        .then((response) => {\n        \n            // console.log(response[\"data\"])\n            // console.log(`aaa ${response[\"data\"]}`)\n            \n        horarios = response[\"data\"]['schedule'];\n        valor = new Date(`${response[\"data\"][\"start\"]} 13:00:00`);\n        \n        if (mood === true) {\n            valor.setDate(valor.getDate() + 7);\n        }\n\n        setWeek(valor);\n        cupos = response[\"data\"]['cupos'];\n        cupos0 = response[\"data\"]['cupos_0'];\n        setSchedule({})\n\n        })\n        .catch((err) => {\n        console.log(err);\n        if (err.response) {\n        } else {\n        }\n\n        });\n        \n        // setIsLoading(false)\n        //console.log(`aaa ${week}`)\n        // https://www.sitepoint.com/delay-sleep-pause-wait/\n        function sleep(s) {\n            return new Promise(resolve => setTimeout(resolve, s))\n          \n        }\n        sleep(2000)\n        .then( () => {\n                //setIsLoading(false);\n                tiempo_paso = true;\n\n        })\n         \n\n    };\n\n    const responseGoogle = (response) => {\n        setMood(false);\n\n        reloadSchedule();\n        \n        //console.log(week)\n        // console.log(response);\n        //console.log(\"AAA\", response);\n        \n        if (response && \"Ws\" in response) {\n        setEmail(response[\"Ws\"][\"Ht\"])\n        setName(response[\"Ws\"][\"Qe\"])\n        setGoogleImage(response[\"Ws\"][\"wJ\"])\n        \n        let url = `${api}/tutore?email=` + response[\"Ws\"][\"Ht\"] //\"https://sala-tutorxs.herokuapp.com/week\";\n        axios\n        .get(url, {}, { headers: {\"Access-Control-Allow-Origin\": \"*\"}})                         \n        .then((response) => {\n            setTutore(response[\"data\"])\n            setNombre(response[\"data\"][\"apodo\"])\n            setNombreNew(response[\"data\"][\"apodo\"])\n            // setRol(response[\"data\"][\"rol\"])\n        })\n        .catch((err) => {\n        console.log(err);\n        if (err.response) {\n        } else {\n        }\n        });\n        \n        } else {\n            setEmail(\"\")\n            setName(\"\")\n            setNombreNew(\"\")\n            setTutore({\"email\": \"\", \"nombre\": \"\", \"pronombre\": \"\",\n                    \"apodo\": \"\", \"gds\": \"\", \"tiene_llave\": false,\n                    \"rol\": [], \"gda\": \"\" })\n            \n        }\n\n        //setNombre(tutore[\"apodo\"])\n        //setIsLoading(false);\n        reloadSchedule();\n      }\n\n    \n    const handleChange = (newSchedule) => {\n        // console.log(newSchedule)\n        setSchedule({ schedule: newSchedule });\n    }\n\n    const check_espacios = (time) => {\n        for(let i in horarios){\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\n                \n                return `${horarios[i]['cupos']}`;\n                // return `(${horarios[i]['espacios']}/4)`;\n            }\n        }\n        return cupos0\n    }\n\n    let colorSelected = 'rgba(89, 154, 242, 1)'\n    let colorNotSelected = 'rgba(162, 198, 248, 1)'\n    let colorMouse = '#dbedff'\n\n    const colors = (time) => {\n\n        let verde = true;\n        let not = false;\n        let anotade = false;\n\n        for (let i in horarios) {\n            if (Date.parse(new Date( horarios[i]['date'] )) === Date.parse(time)) {\n                verde = horarios[i]['verde'];\n                not = horarios[i]['not'];\n                //console.log(\"AAA\")\n                if (email) {\n                    // console.log(\"ES EMAIL\", horarios[i][\"nombres\"])\n\n                    if (horarios[i]['emails'].includes(email)) {\n                        //console.log(\"ESTÄ EL EMAIL \")\n                        anotade = true;\n                    }\n                }\n\n            }\n        }\n\n          if ( !verde ) {\n\n            colorSelected = '#e8ebed'\n            colorNotSelected = '#e8ebed'\n            colorMouse = '#e8ebed'\n            \n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\n                colorSelected = '#657786';\n                colorMouse = '#8ea0ab';\n            }\n\n        } else\n        if (anotade) {\n            colorSelected = '#EC7063';\n            colorNotSelected = '#52BE80';\n            colorMouse = '#7DCEA0';\n\n        }  else if ( not || time.getDay() === 6 || time.getDay() === 0) {\n\n            /*colorSelected = 'rgba(231, 76, 60)'\n            colorNotSelected = 'rgba(241, 148, 138)'\n            colorMouse = '#F5B7B1'*/\n            colorSelected = '#e8ebed'\n            colorNotSelected = '#e8ebed'\n            colorMouse = '#b5c0c7'\n\n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\n                colorSelected = '#657786';\n                colorMouse = '#8ea0ab';\n            }\n\n        } else {\n\n            colorSelected = 'rgba(89, 154, 242, 1)'\n            colorNotSelected = 'rgba(162, 198, 248, 1)'\n            colorMouse = '#dbedff'\n\n        }\n\n        return [colorSelected, colorNotSelected, colorMouse]\n    }\n\n    const modSchedule = () => {\n        axios.post(`${api}/horarios/modificar`, {'tutore': tutore, 'schedule': schedule }, {'tutore': tutore, 'schedule': schedule})\n        .then( (response) => {\n            reloadSchedule();\n        })\n        .catch( (err) => {\n            console.log(err)\n        })\n    };\n\n    const changeMood = () => {\n    \n        if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\n            \n            if (!mood) {\n                setWeekDays(5)\n                week.setDate(week.getDate() + 7);\n            } else {\n                setWeekDays(5)\n                week.setDate(week.getDate() - 7);\n            }\n\n            setMood(!mood);\n        } else {\n            setMood(false);\n            setWeekDays(5)\n        }\n    }\n\n    const changeName = () => {\n        let esClase = \"\";\n        if (!tutore[\"email\"]) { \n            return <span style={{width: \"100%\"}}></span>\n        }\n\n        return ( \n            <Modal \n            title=\"Cambia tu nombre!\" \n            visible={isModalVisible} \n            onOk={sendRequest} \n            onCancel={handleCancel}\n            okText=\"Cambiar\"\n            >\n                <Input placeholder='Cambiar tu nombre' value={nombre}  style={{ marginTop: '1%' }} onChange={(d) => setNombre(d.target.value)}/>\n            </Modal>\n        )\n    }\n\n    const boton = () => {\n        if (tutore[\"rol\"]) {\n            if (tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) {\n                return ( <Button type=\"primary\"\n                // size=\"small\"\n                // htmlType=\"submit\"\n                shape=\"round\"\n                style={{\n                    textAlign: \"center\",\n                    color: \"white\"\n                }}\n                onClick={modSchedule}>\n                Modificar Horario\n             </Button> ) }\n        } else {\n            return \n        }\n    }\n\n    const colorTutorxs = (tutore) => {\n        if (!tutore) {\n            return <span></span>\n        }\n        let rol = tutore['rol'];\n        let color = '#E74C3C'\n        if (rol === 'coordi') {\n            color = '#273746'\n        } else if (rol === 'jefx') {\n            color = 'rgba(46, 134, 193, 1)'\n        }\n        // console.log(tutore)\n        return <span className={\"ant-btn-primary-3 tutore\"} key={tutore['nombre']} style={{backgroundColor: color, color: 'white', borderRadius: '0.3rem', borderColor: 'transparent', margin: '0.1rem', fontSize: '0.8rem', paddingTop: '0.2rem', paddingBottom: '0.26rem', paddingLeft: '0.3rem', paddingRight: '0.3rem',  verticalAlign: 'center'}}>{tutore['nombre']}</span>\n    \n            \n            //for (let i in lista)\n\n            \n        //)</div>}\n    }\n\n    const formatTutores = (time) => {\n        let lista = [];\n        for(let i in horarios){\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\n                lista = horarios[i]['nombres'];\n            }\n        }\n        // let result = '';\n        let listaTutorxs = []\n        for (let i in lista){\n\n            listaTutorxs.push(colorTutorxs(lista[i]))\n\n            // result += `${colorTutorxs(lista[i])}`;\n        }\n        // console.log(listaTutorxs)\n\n        return   listaTutorxs \n    }\n\n    const renderCustomDateCell = (time, selected, innerRef) => { \n\n        let [colorSelected, colorNotSelected, colorMouse] = colors(time)\n\n        return (\n        <div \n        style={{ \n            textAlign: 'center', \n            backgroundColor: selected ? colorSelected : colorNotSelected,\n            borderRadius: '20px',\n            height: '30px',\n            padding: '3px'\n        }} \n            ref={innerRef} onMouseOver={(c) => {\n                c.target.style.backgroundColor = colorMouse;\n                setSelected(formatTutores(time));\n            }}\n            onMouseLeave={(c) => {c.target.style.backgroundColor = selected ? colorSelected : colorNotSelected}}>\n            {check_espacios(time)}\n        </div>\n    ) }\n\n    const sendSchedule = () => {\n\n        axios.post(`${api}/horarios/reservar`, {'tutore': tutore, 'schedule': schedule }, {'tutore': tutore, 'schedule': schedule})\n        .then( (response) => {\n            if (!response.data.status) {\n                message.warning(response.data.message);\n            }\n            \n            reloadSchedule();\n        })\n    }\n\n    const sendRequest = () => {\n        const obj = {schedule: schedule, nombre: nombre}\n        \n        axios.put(`${api}/tutore/change-name`, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule}, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule})\n        .then( (response) => {\n            // console.log(response)\n            setNombreNew(response[\"data\"][\"name\"]);\n            // console.log(schedule)\n            // setNombreNew(response[\"data\"][\"name\"])\n            reloadSchedule();\n        })\n        setIsModalVisible(false);\n        \n    }\n\n    const renderTimeLabel = (time) => {\n        let traductor = {   1: \"M1\",\n                        2: \"M2\",\n                        3: \"M3\",\n                        4: \"AL\",\n                        5: \"M4\",\n                        6: \"M5\",\n                        7: \"M6\"}\n\n        let traductorTime = {   1: \"08:30\",\n                        2: \"10:00\",\n                        3: \"11:30\",\n                        4: \"13:00\",\n                        5: \"14:00\",\n                        6: \"15:30\",\n                        7: \"17:00\"}\n        return <span className=\"timeFont\">{traductorTime[time.getHours()]}</span>\n    }\n\n    const renderDateLabel = (date) => {\n        let traductor = {   1: \"L\",\n                        2: \"M\",\n                        3: \"W\",\n                        4: \"J\",\n                        5: \"V\",\n                        6: \"S\",\n                        0: \"D\"}\n        return <span className=\"dateFont\">{traductor[date.getDay()]} {date.getDate()}</span>\n    }\n\n    const GoogleSign = () => {\n\n        if (!tutore || !tutore[\"email\"] || !tutore[\"apodo\"]) {\n            return <GoogleLogin\n            clientId={googleKey}\n            buttonText=\"Iniciar Sesión ❤\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy={'single_host_origin'}\n            isSignedIn={true}\n            />\n        } else {\n            \n            return <GoogleLogout\n            clientId={googleKey}\n            buttonText=\"Cerrar Sesión\"\n            onLogoutSuccess={responseGoogle}\n            >\n            </GoogleLogout>\n        }\n    }\n\n    function sleep(s) {\n        return new Promise(resolve => setTimeout(resolve, s))\n    }\n\n    if (!firstLoading) {\n        reloadSchedule();\n    sleep(2380)\n    .then( () => {\n        \n        setFirstLoading(true);\n        setIsLoading(false);\n    })\n    }\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    return (\n    \n    <LoadingScreen\n\n        loading={isLoading}\n        bgColor='#ff5757' // '#cc0000'\n        spinnerColor='#9ee5f8'\n        textColor='white'\n        logoSrc={Logo}\n        text='Buscando las llaves de la sala...'\n    > \n        <div className=\"principal\">\n            <div className=\"header\">\n                <Row align=\"middle\" justify=\"space-between\">\n                <img src={logo} style={{ width: 50 }} alt=\"\" />\n                <Anchor className=\"anchor\" targetOffset=\"70\">\n                    <Button type=\"link\" onClick={showModal}>\n                        <Link title={nombreNew}/>\n                    </Button>\n                </Anchor>\n                </Row>\n            </div>\n\n            <div id=\"home\" className=\"wave-container\">\n                <Row justify=\"center\" style={{marginLeft: \"15px\", marginRight: \"15px\"}}>\n                <Space size=\"small\" direction=\"vertical\">\n                    <h1 className=\"title\">Sala de Tutores</h1>\n                    <p className=\"description\">{<HeartFilled/>} Reserva tus módulos en la salita {<HeartFilled/>}</p>\n                    <br/>\n                    {GoogleSign()}\n                </Space>\n                </Row>\n                {/*<img src={imagen} className=\"imgHeader\" alt=\"\" />*/}\n\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\n                    <path fill=\"#fff\" fill-opacity=\"1\" d=\"M0,32L60,37.3C120,43,240,53,360,85.3C480,117,600,171,720,202.7C840,235,960,245,1080,224C1200,203,1320,149,1380,122.7L1440,96L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z\"></path>\n                </svg>\n            </div>\n\n            {(tutore.email !== \"\") &&\n\n            \n            <div id=\"reservar\">\n                <Row justify=\"center\">\n                    <Card style={{alignItems: 'center'}} bordered={false}>\n                    \n                        <Col xs={24} sm={30} md={36} lg={44} xl={50}>\n                            <ScheduleSelector \n                                timeFormat='h' \n                                startDate={week}  \n                                numDays={weekDays} \n                                minTime={1} \n                                maxTime={8} \n                                selection={schedule.schedule} \n                                onChange={handleChange}\n                                renderDateCell={renderCustomDateCell}  \n                                renderTimeLabel={renderTimeLabel}\n                                renderDateLabel={renderDateLabel}\n                                dateFormat='ddd DD'\n                            /> \n\n                            <br/>\n\n                            <Space>\n                                <Button\n                                    type=\"primary\"\n                                    \n                                    // htmlType=\"submit\"\n                                    shape=\"round\"\n                                    style={{\n                                        textAlign: \"center\",\n                                        color: \"white\"\n                                    }}\n                                    onClick={reloadSchedule}\n                                >\n                                        {<ReloadOutlined />}\n                                </Button>\n                                \n                                <Button\n                                    type=\"primary\"\n                                    \n                                    // htmlType=\"submit\"\n                                    shape=\"round\"\n                                    style={{\n                                        textAlign: \"center\",\n                                        color: \"white\"\n                                    }}\n                                    onClick={sendSchedule}\n                                >\n                                        Enviar\n                                </Button>\n\n                                {boton()}\n                                \n                            </Space>\n                            \n                            <br/>\n                            <br/>\n                            \n                            <Card\n                                title=\"Tutores en el módulo\" \n                                bordered={false}\n                                style={{ \n                                    backgroundColor: \"#F5F8FA\",\n                                    height: \"130px\"\n                                }}\n                            >\n                                <Row align=\"middle\" justify=\"center\" style={{height: '70px'}}>\n                                    {selected}\n                                </Row>\n                            </Card>\n                        </Col>\n                        <br/>\n                        <Space align=\"center\" direction=\"vertical\" size=\"small\">\n                            {(tutore[\"rol\"].includes(\"pfg\") || tutore[\"rol\"].includes(\"supertutore\")) &&\n                                <Switch style={{position: \"relative\"}} onChange={changeMood}> </Switch> // {mood}\n                            }\n                        </Space> \n                    </Card>\n                </Row>\n                \n            </div>\n            }\n\n            {changeName()}\n        </div>\n        <p style={{textAlign: \"center\", marginTop: \"4%\"}}>\n            Made with {<HeartFilled />} by PFGang\n        </p>\n        \n    </LoadingScreen>\n    )\n}","import logo from './logo.svg';\nimport './App.css';\nimport \"antd/dist/antd.css\";\n\nimport HorariosSala from './views/sala';\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/sala\">\n          <HorariosSala />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}