{"version":3,"sources":["logo.svg","logo.gif","views/sala.js","App.js","reportWebVitals.js","index.js"],"names":["api","googleKey","process","horarios","cupos0","valor","url","HorariosSala","useState","schedule","setSchedule","nombre","setNombre","selected","setSelected","email","setEmail","name","setName","Date","week","setWeek","isLoading","setIsLoading","setGoogleImage","nombreNew","setNombreNew","tutore","setTutore","tiempo_paso","reloadSchedule","s","axios","get","headers","then","response","catch","err","console","log","Promise","resolve","setTimeout","useEffect","responseGoogle","check_espacios","time","i","parse","colorSelected","colorNotSelected","colorMouse","colors","verde","not","anotade","includes","colorTutorxs","rol","color","className","style","backgroundColor","borderRadius","borderColor","margin","fontSize","paddingTop","paddingBottom","paddingLeft","paddingRight","verticalAlign","loading","bgColor","spinnerColor","textColor","logoSrc","Logo","text","alignItems","xs","sm","md","lg","xl","timeFormat","startDate","numDays","minTime","maxTime","selection","onChange","newSchedule","renderDateCell","innerRef","textAlign","ref","onMouseOver","c","target","lista","listaTutorxs","push","formatTutores","onMouseLeave","dateFormat","marginTop","type","size","onClick","post","placeholder","value","d","put","clientId","buttonText","onLogoutSuccess","onSuccess","onFailure","cookiePolicy","isSignedIn","HeartFilled","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d53dce6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.605cbd06.gif\";","import React, {useState, useEffect} from 'react';\r\nimport { Row, Col, Button, Card, Input, Form } from 'antd';\r\nimport { HeartFilled } from '@ant-design/icons';\r\nimport ScheduleSelector from 'react-schedule-selector';\r\nimport axios from \"axios\";\r\nimport { Header } from 'antd/lib/layout/layout';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport  LoadingScreen  from 'react-loading-screen';\r\nimport Logo from '../logo.gif';\r\n\r\n\r\n\r\nlet api = \"https://sala-tutorxs.herokuapp.com\"\r\nconst googleKey = process.env.REACT_APP_GOOGLE;\r\n// api = \"localhost:5000\"\r\n\r\n\r\nconst style = { background: '#0092ff', padding: '8px 0' };\r\n// GET de array u obj, buscar fecha y obtener personas anotadas\r\n/*const horarios = [\r\n    {\r\n        'date': \"2021-08-30 1:00:00\",\r\n        'nombres': ['tesurot'],\r\n        'espacios': 1\r\n    }\r\n]; */\r\n\r\n\r\n\r\n\r\n//let  useEffect();\r\n\r\n// console.log(horarios)\r\n\r\n\r\n\r\nlet horarios = []\r\nlet cupos = 0\r\nlet cupos0 = '(0/4)'\r\nlet valor = 0;\r\n\r\nlet url = `${api}/week` //\"https://sala-tutorxs.herokuapp.com/week\";\r\nfunction loadSchedule () {    axios\r\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n                                    \r\n        .then((response) => {\r\n\r\n        horarios = response[\"data\"]['schedule'];\r\n        cupos = response[\"data\"]['cupos'];\r\n        cupos0 = response[\"data\"]['cupos_0'];\r\n\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n        } else {\r\n        }\r\n\r\n        });\r\n\r\n    };\r\n\r\nloadSchedule();\r\n\r\nexport default function HorariosSala() {\r\n\r\n    const [schedule, setSchedule] = useState({});\r\n    const [nombre, setNombre] = useState('');\r\n    const [selected, setSelected] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('')\r\n    const [week, setWeek] = useState(new Date())\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [googleImage, setGoogleImage] = useState(\"\")\r\n    const [nombreNew, setNombreNew] = useState('')\r\n    const [tutore, setTutore] = useState({\"email\": \"\",\r\n                                        \"nombre\": \"\",\r\n                                        \"gds\": \"\",\r\n                                        \"apodo\": \"\",\r\n                                        \"pronombre\": \"\",\r\n                                        \"tiene_llave\": false,\r\n                                        \"gda\": \"\",\r\n                                        \"rol\": []\r\n                                        })\r\n    // const [form] = Form.useForm();\r\n    let tiempo_paso = false;\r\n    function reloadSchedule () {    axios\r\n        .get(url, {}, {headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n                                    \r\n        .then((response) => {\r\n        \r\n            // console.log(response[\"data\"])\r\n            // console.log(`aaa ${response[\"data\"]}`)\r\n            \r\n        horarios = response[\"data\"]['schedule'];\r\n        valor = new Date(horarios[0][\"date\"]);\r\n        setWeek(valor);\r\n        cupos = response[\"data\"]['cupos'];\r\n        cupos0 = response[\"data\"]['cupos_0'];\r\n        setSchedule({})\r\n\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n        } else {\r\n        }\r\n\r\n        });\r\n        \r\n        // setIsLoading(false)\r\n        //console.log(`aaa ${week}`)\r\n        // https://www.sitepoint.com/delay-sleep-pause-wait/\r\n        function sleep(s) {\r\n            return new Promise(resolve => setTimeout(resolve, s))\r\n            let tiempo = new Date() + s;\r\n            while (new Date() < tiempo) {\r\n\r\n            }\r\n        }\r\n        sleep(3000)\r\n        .then( () => {\r\n                setIsLoading(false);\r\n                console.log(\"deberia salirse la carga\");\r\n                tiempo_paso = true;\r\n\r\n        })\r\n         \r\n\r\n    };\r\n    useEffect(() => {\r\n        if(tiempo_paso === true){\r\n            setIsLoading(false);\r\n            console.log(\"deberia salirse po\");\r\n        }\r\n    }, [tiempo_paso]);\r\n\r\n    const responseGoogle = (response) => {\r\n        \r\n        \r\n        //console.log(week)\r\n        // console.log(response);\r\n        console.log(\"AAA\", response)\r\n        if (response[\"Ws\"]) {\r\n        setEmail(response[\"Ws\"][\"Ht\"])\r\n        setName(response[\"Ws\"][\"Qe\"])\r\n        setGoogleImage(response[\"Ws\"][\"wJ\"])\r\n        \r\n        let url = `${api}/tutore?email=` + response[\"Ws\"][\"Ht\"] //\"https://sala-tutorxs.herokuapp.com/week\";\r\n        axios\r\n        .get(url, {}, { headers: {\"Access-Control-Allow-Origin\": \"*\"}})                         \r\n        .then((response) => {\r\n            setTutore(response[\"data\"])\r\n            setNombre(response[\"data\"][\"apodo\"])\r\n            setNombreNew(response[\"data\"][\"apodo\"])\r\n        })\r\n        .catch((err) => {\r\n        console.log(err);\r\n        if (err.response) {\r\n        } else {\r\n        }\r\n        });\r\n        \r\n        } else {\r\n            setEmail(\"\")\r\n            setName(\"\")\r\n            setTutore({\"email\": \"\", \"nombre\": \"\", \"pronombre\": \"\",\r\n                    \"apodo\": \"\", \"gds\": \"\", \"tiene_llave\": false,\r\n                    \"rol\": [], \"gda\": \"\" })\r\n        }\r\n\r\n        //setNombre(tutore[\"apodo\"])\r\n        //setIsLoading(false);\r\n        reloadSchedule();\r\n      }\r\n\r\n    \r\n    const handleChange = (newSchedule) => {\r\n        // console.log(newSchedule)\r\n        setSchedule({ schedule: newSchedule });\r\n    }\r\n\r\n    const check_espacios = (time) => {\r\n        for(let i in horarios){\r\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\r\n                \r\n                return `${horarios[i]['cupos']}`;\r\n                // return `(${horarios[i]['espacios']}/4)`;\r\n            }\r\n        }\r\n        return cupos0\r\n    }\r\n\r\n    let colorSelected = 'rgba(89, 154, 242, 1)'\r\n    let colorNotSelected = 'rgba(162, 198, 248, 1)'\r\n    let colorMouse = '#dbedff'\r\n\r\n    const colors = (time) => {\r\n\r\n        let verde = true;\r\n        let not = false;\r\n        let anotade = false;\r\n\r\n        for (let i in horarios) {\r\n            if (Date.parse(new Date( horarios[i]['date'] )) === Date.parse(time)) {\r\n                verde = horarios[i]['verde'];\r\n                not = horarios[i]['not'];\r\n                //console.log(\"AAA\")\r\n                if (email) {\r\n                    // console.log(\"ES EMAIL\", horarios[i][\"nombres\"])\r\n\r\n                    if (horarios[i]['emails'].includes(email)) {\r\n                        //console.log(\"ESTÄ EL EMAIL \")\r\n                        anotade = true;\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n          if ( !verde ) {\r\n\r\n            colorSelected = 'rgba(142, 68, 173, 1)'\r\n            colorNotSelected = 'rgba(187, 143, 206, 1)'\r\n            colorMouse = '#D2B4DE'\r\n            \r\n\r\n        } else\r\n        if (anotade) {\r\n            colorSelected = '#EC7063';\r\n            colorNotSelected = '#52BE80';\r\n            colorMouse = '#7DCEA0';\r\n\r\n        }  else if ( not ) {\r\n\r\n            /*colorSelected = 'rgba(231, 76, 60)'\r\n            colorNotSelected = 'rgba(241, 148, 138)'\r\n            colorMouse = '#F5B7B1'*/\r\n            colorSelected = 'rgba(142, 68, 173, 1)'\r\n            colorNotSelected = 'rgba(187, 143, 206, 1)'\r\n            colorMouse = '#D2B4DE'\r\n\r\n        } else {\r\n\r\n            colorSelected = 'rgba(89, 154, 242, 1)'\r\n            colorNotSelected = 'rgba(162, 198, 248, 1)'\r\n            colorMouse = '#dbedff'\r\n\r\n        }\r\n\r\n        return [colorSelected, colorNotSelected, colorMouse]\r\n    }\r\n\r\n    const colorTutorxs = (tutore) => {\r\n        if (!tutore) {\r\n            return <span></span>\r\n        }\r\n        let rol = tutore['rol'];\r\n        let color = '#E74C3C'\r\n        if (rol === 'coordi') {\r\n            color = '#273746'\r\n        } else if (rol === 'jefx') {\r\n            color = 'rgba(46, 134, 193, 1)'\r\n        }\r\n        // console.log(tutore)\r\n        return <span className={\"ant-btn-primary tutore\"} key={tutore['nombre']} style={{backgroundColor: color, color: 'white', borderRadius: '0.3rem', borderColor: 'transparent', margin: '0.1rem', fontSize: '0.8rem', paddingTop: '0.2rem', paddingBottom: '0.26rem', paddingLeft: '0.3rem', paddingRight: '0.3rem',  verticalAlign: 'center'}}>{tutore['nombre']}</span>\r\n    \r\n            \r\n            //for (let i in lista)\r\n\r\n            \r\n        //)</div>}\r\n    }\r\n\r\n    const formatTutores = (time) => {\r\n        let lista = [];\r\n        for(let i in horarios){\r\n            if(Date.parse(new Date(horarios[i]['date'])) === Date.parse(time)){\r\n                lista = horarios[i]['nombres'];\r\n            }\r\n        }\r\n        // let result = '';\r\n        let listaTutorxs = []\r\n        for (let i in lista){\r\n\r\n            listaTutorxs.push(colorTutorxs(lista[i]))\r\n\r\n            // result += `${colorTutorxs(lista[i])}`;\r\n        }\r\n        // console.log(listaTutorxs)\r\n\r\n        return   listaTutorxs \r\n    }\r\n\r\n    const renderCustomDateCell = (time, selected, innerRef) => { \r\n        //console.log(innerRef\r\n        // console.log(selected)\r\n        \r\n        let [colorSelected, colorNotSelected, colorMouse] = colors(time)\r\n\r\n        /*\r\n        if (time === Date.parse(new Date(\"2021-09-05 6:00:00\"))) {\r\n            console.log(\"HORA AAAAAAAAAAAAAA\");\r\n            console.log(colorSelected)\r\n        }\r\n\r\n        if (time === Date.parse(new Date(\"2021-09-05 7:00:00\"))) {\r\n            console.log(\"HORA AAAAAAAAAAAAAA\");\r\n            console.log(colorSelected)\r\n        } */\r\n\r\n        return (\r\n        <div style={{ textAlign: 'center', backgroundColor: selected ? colorSelected : colorNotSelected}} \r\n            ref={innerRef} onMouseOver={(c) => {\r\n                c.target.style.backgroundColor = colorMouse;\r\n                setSelected(formatTutores(time));\r\n            }}\r\n            onMouseLeave={(c) => {c.target.style.backgroundColor = selected ? colorSelected : colorNotSelected}}>\r\n            {check_espacios(time)}\r\n        </div>\r\n    ) }\r\n\r\n    // const validateFields = (rule, value, callback) => {\r\n    //     const nombre = form.getFieldValue('nombre')\r\n    //     if (nombre === '') {\r\n    //     callback('Pon tu nombre plis');\r\n    //     }\r\n\r\n    //     let obj = {\r\n    //     schedule: form.getFieldValue('schedule'),\r\n    //     nombre: form.getFieldValue('nombre'),\r\n    //     };\r\n    //     console.log(obj);\r\n    //     // let url = \"https://rafa-api.herokuapp.com/people/login\";\r\n    //     // axios\r\n    //     //   .post(url, obj)\r\n    //     //   .then((response) => {\r\n    //     //     console.log(response);\r\n    //     //     callback();\r\n    //     //   })\r\n    //     //   .catch((err) => {\r\n    //     //     console.log(err);\r\n    //     //     if (err.response) {\r\n    //     //       callback(err.response.data.error);\r\n    //     //     } else {\r\n    //     //       callback('Ocurrió un error.');\r\n    //     //     }\r\n    \r\n    //     //   });\r\n    // };\r\n    // const onFinish = (values) => {\r\n    //     return;\r\n    // };\r\n\r\n    const sendSchedule = () => {\r\n        // const obj = {schedule: schedule, nombre: nombre}\r\n        // console.log(\"AAA\", schedule)\r\n        axios.post(`${api}/horarios/reservar`, {'tutore': tutore, 'schedule': schedule }, {'tutore': tutore, 'schedule': schedule})\r\n        .then( (response) => {\r\n            reloadSchedule();\r\n        })\r\n    }\r\n\r\n    const sendRequest = () => {\r\n        const obj = {schedule: schedule, nombre: nombre}\r\n        \r\n        axios.put(`${api}/tutore/change-name`, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule}, {\"nombre\": nombre, \"tutore\": tutore, \"schedule\": schedule})\r\n        .then( (response) => {\r\n            // console.log(response)\r\n            setNombreNew(response[\"data\"][\"name\"]);\r\n            // console.log(schedule)\r\n            // setNombreNew(response[\"data\"][\"name\"])\r\n            \r\n        })\r\n        \r\n        reloadSchedule();\r\n        \r\n    }\r\n\r\n    const GoogleSign = () => {\r\n\r\n        if (!tutore || !tutore[\"email\"]) {\r\n            return <GoogleLogin\r\n            clientId={googleKey}\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n            isSignedIn={true}\r\n            />\r\n            } else {\r\n            \r\n            return <GoogleLogout\r\n            clientId={googleKey}\r\n            buttonText=\"Logout\"\r\n            onLogoutSuccess={responseGoogle}\r\n            >\r\n            </GoogleLogout>\r\n            }\r\n    }\r\n\r\n    // console.log(horarios)\r\n\r\n    return (\r\n\r\n        <LoadingScreen\r\n    loading={isLoading}\r\n    bgColor='#ff5757'\r\n    spinnerColor='#9ee5f8'\r\n    textColor='white'\r\n    logoSrc={Logo}\r\n    text='Buscando las llaves de la sala...'\r\n  > \r\n        \r\n        <div>\r\n            \r\n    \r\n        <h1>Salita Tutores 🥰</h1>\r\n\r\n        \r\n\r\n\r\n        <Card style={{alignItems: 'center'}}>\r\n        \r\n            {/* <Form\r\n              name=\"basic\"\r\n              onFinish={onFinish}\r\n              form={form}\r\n              style={{ marginTop: \"10px\" }}\r\n            > */}\r\n                <Col xs={16} sm={20} md={24} lg={28} xl={44}>\r\n                    {/* <Form.Item\r\n                        name=\"schedule\"\r\n                        values=\"schedule\"\r\n                        // dependencies={[\"contrasena\"]}\r\n                        validateTrigger=\"onBlur\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Por favor pon algun horario\",\r\n                        },\r\n                        {\r\n                            validator: validateFields,\r\n                        }\r\n                        ]}\r\n                    > */}\r\n                        <ScheduleSelector timeFormat='h' startDate={week}  numDays={5} minTime={1} maxTime={8} \r\n                                        selection={schedule.schedule} onChange={handleChange}\r\n                                        renderDateCell={renderCustomDateCell}  dateFormat='DD/MM'\r\n                        /> \r\n                    {/* </Form.Item> */}\r\n                    {/* <Form.Item\r\n                        name=\"nombre\"\r\n                        values=\"nombre\"\r\n                        // dependencies={[\"contrasena\"]}\r\n                        validateTrigger=\"onBlur\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Pon tu nombreeee\",\r\n                        },\r\n                        {\r\n                            validator: validateFields,\r\n                        }\r\n                        ]}\r\n                    > */}\r\n                    <p style={{marginTop:'2%'}}>Tutores en la casilla: {selected}</p>\r\n                    {/* </Form.Item> */}\r\n                    \r\n                    <Button\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                            // htmlType=\"submit\"\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                marginTop: \"5%\",\r\n                                borderRadius: \"10px\",\r\n                                fontSize: \"15px\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={reloadSchedule}\r\n                        >\r\n                            Recargar\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                            // htmlType=\"submit\"\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                marginTop: \"5%\",\r\n                                borderRadius: \"10px\",\r\n                                fontSize: \"15px\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={sendSchedule}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                    <Input placeholder='Cambiar tu nombre' value={nombre}  style={{ marginTop: '1%' }} onChange={(d) => setNombre(d.target.value)}/>\r\n                    {/* </Form.Item> */}\r\n                    <Button\r\n                            type=\"primary\"\r\n                            size=\"large\"\r\n                            // htmlType=\"submit\"\r\n                            style={{\r\n                                textAlign: \"center\",\r\n                                marginTop: \"5%\",\r\n                                borderRadius: \"10px\",\r\n                                fontSize: \"15px\",\r\n                                color: \"white\"\r\n                            }}\r\n                            onClick={sendRequest}\r\n                        >\r\n                            Cambiar mi nombre\r\n                    </Button>\r\n                </Col>\r\n            {/* </Form> */}\r\n        </Card>\r\n        \r\n        {/*\r\n        <img src={googleImage}></img>\r\n        */}\r\n        <h1>{email}</h1>\r\n        <h1>{name}</h1>\r\n        <h1>{nombreNew}</h1>\r\n\r\n        {GoogleSign()}\r\n\r\n\r\n        <p style={{textAlign: \"center\", marginTop: \"4%\"}}>\r\n          Made with {<HeartFilled />} by PFGang\r\n        </p>\r\n        </div>\r\n    </LoadingScreen>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport \"antd/dist/antd.css\";\n\nimport HorariosSala from './views/sala';\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Switch>\n      <Route exact path=\"/sala\">\n        <HorariosSala />\n      </Route>\n    </Switch>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}